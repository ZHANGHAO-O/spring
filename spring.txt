
package org.example;

import org.example.config.AppConfig;
import org.example.controller.LoginController;
import org.example.dao.LoginDAO;
import org.example.model.User;
import org.example.service.LoginService;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class App {

    public static void main(String[] args) {
        //根据Spring配置文件路径创建容器：应用上下文对象
        ApplicationContext context = new ClassPathXmlApplicationContext("beans.xml");

        //获取注册的Bean对象：根据名称获取，或根据类型
        LoginController loginController = (LoginController) context.getBean("loginController");

        //获取Service，DAO的对象：通过类型获取
        LoginDAO loginDAO = (LoginDAO) context.getBean("loginDAO");

        LoginService loginService = (LoginService) context.getBean(LoginService.class);
        System.out.println(loginController);
        System.out.println(loginDAO);
        System.out.println(loginService);


        User user1 = (User) context.getBean("user1");
        User user2 = (User) context.getBean("user2");
        System.out.println(user1);
        System.out.println(user2);

        AppConfig appConfig = (AppConfig) context.getBean(AppConfig.class);
        System.out.println(appConfig);

        User user = (User) context.getBean("byFactoryBean");
        System.out.printf("get bean by FactoryBean: %s%n",user);



        //关闭容器
        ((ClassPathXmlApplicationContext) context).close();
    }
}

package org.example.controller;


import org.example.model.User;
import org.example.service.LoginService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.stereotype.Controller;

@Controller
public class LoginController {
    @Autowired
    private LoginService loginService;

    //Controller层：请求数据的校验


    @Bean
    public User user1(){
        User user = new User();
        user.setUsername("拜仁");
        user.setPassword("123");
        return user;
    }

    @Bean
    public User user2(){
        User user = new User();
        user.setUsername("多特");
        user.setPassword("456");
        return user;
    }
}
package org.example.service;


import org.example.dao.LoginDAO;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class LoginService {
    @Autowired
    private LoginDAO loginDAO;

    //Service层:做业务逻辑，根据传入执行不同条件的DAO操作
}

package org.example.model;


import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@Getter
@Setter
@ToString
public class User {
    private String username;
    private String password;
package org.example.config;

import org.springframework.context.annotation.Configuration;

@Configuration
public class AppConfig {
    public interface FactoryBean<T>{
        T getObject() throws Exception;
        Class<T> getObjectType();
        default boolean isSingleton(){
            return true;
        }
    }
}
package org.example.Until;

import org.example.model.User;
import org.springframework.beans.factory.FactoryBean;
import org.springframework.stereotype.Component;

@Component
public class ByFactoryBean implements FactoryBean<User> {
    @Override
    public User getObject() throws Exception {
        User user = new User();
        user.setUsername("阿贾克斯");
        user.setPassword("789");
        return user;
    }

    @Override
    public Class<?> getObjectType() {
        return User.class;
    }
}
package org.example.dao;


import org.springframework.stereotype.Repository;

@Repository
public class LoginDAO {

}
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.example</groupId>
    <artifactId>spring-study</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-framework.version>5.2.10.RELEASE</spring-framework.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.16</version>
        </dependency>
    </dependencies>
</project>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="org.example"/>

</beans>